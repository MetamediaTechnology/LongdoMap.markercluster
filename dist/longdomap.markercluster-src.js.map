{"version":3,"sources":["webpack://lmc/webpack/bootstrap","webpack://lmc/./src/Cluster.js","webpack://lmc/./src/ConfigHandler.js","webpack://lmc/./src/Icon.js","webpack://lmc/./src/LLBBox.js","webpack://lmc/./src/MarkerCluster.js","webpack://lmc/./src/index.js"],"names":["longdo","window","markerCluster","config","iloader","_markerCluster","_config","_map","_center","_markers","_bounds","_clusterIcon","ClusterIcon","marker","tile","location","_calculateBounds","averageCenter","Util","averageLocation","Projections","EPSG3857","isAdded","push","drawMarkerArea","drawArea","swarmModeEnabled","swarmAlg","_gridids","LLBBox","generateFrom","boundOfTile","getNxNGridCord","_markersToShow","length","markersInSameGrid","that","forEach","value","gridid","u","v","active","Overlays","add","remove","removeArea","generateRect","extendSize","gridSize","Math","pow","zoom","isLocInBounds","setSums","setCenter","show","options","maxZoom","minClusterSize","clusterRadius","parseInt","styles","cluster","_cluster","_iloader","_sums","_clusterMarker","Marker","getIcon","OverlayWeight","Top","pos","mz","len","move","setLocation","_poly","Polygon","getRectVertex","center","sums","element","changeNumber","IconLoader","markercluster","_images","Map","ready","useDefault","loadStyles","url","width","height","minThreshold","callback","img","Image","set","onload","get","values","every","elm","resetViewport","_createClusters","src","keys","sort","elm1","elm2","style","load","index","result","document","createElement","elm3","appendChild","marginLeft","marginTop","overflow","className","html","outerHTML","size","background","encodeURI","lineHeight","color","fontWeight","textAlign","num","children","innerText","list","locations","_projection","_locationList","slice","_originalLocationList","locationBound","minLon","minLat","maxLon","maxLat","b","filter","e","empty","loc","contains","diff","maxy","latToNorm","miny","normToLat","map","n","xlen","ylen","_lat2y","lonoffset","lon","yoffset","lat","xid","floor","yid","y","atan","exp","PI","log","tan","bound","loc1","loc2","LLCircle","radius","sqrad","Error","MarkerCluster","_clusters","_prevZoom","_ready","Config","Event","bind","overlay","cl","l","len2","s","markers","m","shuffle","i","r","random","temp","mapBounds","bounds","_addToClosestCluster","_addToTiledCluster","finalize","distance","Number","POSITIVE_INFINITY","clusterToAddTo","cen","d","isMarkerInClusterBounds","addMarker","Cluster","locationToTile","point","locationToPoint","z","pointToTile","indexOf","splice","removed","_removeMarker","markersCopy"],"mappings":"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","file":"longdomap.markercluster-src.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {ClusterIcon} from './Icon';\r\nimport {LLBBox} from './LLBBox';\r\nconst longdo = window.longdo;\r\n/**\r\n * class for cluster\r\n * @export Cluster\r\n * @class Cluster\r\n */\r\nexport default class{\r\n    /**\r\n     * Creates an isntance of Cluster\r\n     * @param {MarkerCluster} markerCluster MarkerCluster instance\r\n     * @param {ConfigHandler} config config variables\r\n     * @param {IconLoader} iloader IconLoader instance\r\n     */\r\n    constructor(markerCluster,config,iloader){\r\n        this._markerCluster = markerCluster;\r\n        this._config = config;\r\n        this._map = markerCluster._map;\r\n        \r\n        this._center = null;\r\n        this._markers = [];\r\n        this._bounds = null;\r\n        this._clusterIcon = new ClusterIcon(this,this._config,iloader);\r\n    }\r\n\r\n    /**\r\n     * add marker to the cluster\r\n     * @param {longdo.Marker} marker marker to be added\r\n     * @param {longdo.Tile} [tile] tile including marker(optional), needed only in swarm mode 1.\r\n     * @returns {undefined}\r\n     */\r\n    addMarker(marker,tile){\r\n        if(!this._center){\r\n            this._center = marker.location();\r\n            this._calculateBounds();\r\n        }else{\r\n            if(this._config.averageCenter){\r\n                this._center = longdo.Util.averageLocation(longdo.Projections.EPSG3857,\r\n                    this._center,marker.location());\r\n                this._calculateBounds();\r\n            }\r\n        }\r\n        marker.isAdded = true;\r\n        this._markers.push(marker);\r\n\r\n        if(this._config.drawMarkerArea){\r\n            this._bounds.drawArea(this._map);\r\n        }\r\n\r\n        if(this._config.swarmModeEnabled && this._config.swarmAlg === 1){\r\n            //TODO\r\n            if(!this._gridids){\r\n                this._gridids = [];\r\n            }\r\n            this._gridids.push(LLBBox.generateFrom(\r\n                longdo.Util.boundOfTile(longdo.Projections.EPSG3857,tile)\r\n            ).getNxNGridCord(marker.location(),4));\r\n\r\n            \r\n            if(!this._markersToShow){\r\n                this._markersToShow = [marker];\r\n            }else if(this._markersToShow.length <= 64){\r\n                let markersInSameGrid = 0;\r\n                const that = this;\r\n                this._gridids.forEach(function(value){\r\n                    const gridid = that._gridids[that._gridids.length-1];\r\n                    markersInSameGrid += gridid.u === value.u && gridid.v === value.v ? 1 : 0;\r\n                });\r\n\r\n                if(markersInSameGrid % 8 !== 0){\r\n                    return true;\r\n                }\r\n                this._markersToShow.push(marker);\r\n            }else{\r\n                return true;\r\n            }\r\n            if(!marker.active()){\r\n                this._map.Overlays.add(marker);\r\n            }\r\n            return true;\r\n        }else if(this._config.swarmModeEnabled && this._config.swarmAlg === 2){\r\n            if(this._markers.length < 11 || this._markers.length % 10 === 0){\r\n                if(!marker.active()){\r\n                    this._map.Overlays.add(marker);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * remove icon & itself\r\n     * @returns {undefined}\r\n     */\r\n    remove(){\r\n        this._clusterIcon.remove();\r\n        this._markers.length = 0;\r\n        delete this._markers;\r\n        this._bounds.removeArea(this._map);\r\n    }\r\n\r\n    /**\r\n     * calculate cluster bound\r\n     * @returns {undefined}\r\n     */\r\n    _calculateBounds(){\r\n        this._bounds = LLBBox.generateRect(this._center).extendSize(this._config.gridSize*Math.pow(2,-this._map.zoom()));     \r\n    }\r\n\r\n    /**\r\n     * returns whether marker is inside cluster bounds\r\n     * @param {longdo.Marker} marker marker to be checked\r\n     * @returns {boolean} If marker is inside cluster bound, returns true\r\n     */\r\n    isMarkerInClusterBounds(marker){\r\n        return this._bounds.isLocInBounds(marker.location());\r\n    }\r\n    /**\r\n     * update icon's style and position and then show on map\r\n     * @returns {undefined}\r\n     */\r\n    finalize(){\r\n        this._clusterIcon.setSums(this._markers.length);\r\n        this._clusterIcon.setCenter(this._center);\r\n        this._clusterIcon.show();\r\n    }\r\n}","/**\r\n * class for carrying config/option values\r\n * @export ConfigHandler\r\n * @class ConfigHandler\r\n */\r\nexport default class {\r\n    constructor(options){\r\n        this.maxZoom = options.maxZoom || null;\r\n        this.minClusterSize = options.minClusterSize || 2;\r\n        this.gridSize = options.gridSize || 120;\r\n        this.clusterRadius = options.clusterRadius || this.gridSize;\r\n        this.averageCenter = options.averageCenter;\r\n        this.drawMarkerArea = options.drawMarkerArea;\r\n        this.swarmModeEnabled = options.swarmModeEnabled;\r\n        this.swarmAlg = options.swarmAlg ? parseInt(options.swarmAlg,10) : null;\r\n        this.styles = options.styles || null;\r\n    }\r\n}","/** @module Icon */\r\nconst longdo = window.longdo;\r\n/**\r\n * Class for managing cluster's icon & children markers' icons\r\n * @export ClusterIcon\r\n * @class ClusterIcon\r\n */\r\nexport class ClusterIcon{\r\n    /**\r\n     *Creates an instance of ClusterIcon.\r\n     * @param {Cluster} cluster cluster in charge of this\r\n     * @param {ConfigHandler} config config variables\r\n     * @param {IconLoader} iloader cluster icon carrier\r\n     * @memberof ClusterIcon\r\n     */\r\n    constructor(cluster,config,iloader){\r\n        this._cluster = cluster;\r\n        this._config = config;\r\n        this._iloader = iloader;\r\n        this._center = null;\r\n        this._map = cluster._map;\r\n        this._sums = null;\r\n        this._clusterMarker = new longdo.Marker({\"lat\":0,\"lon\":0},{\r\n            \"icon\": this._cluster._markerCluster._iloader.getIcon(0),\r\n            \"weight\": longdo.OverlayWeight.Top\r\n        });\r\n    }\r\n\r\n    /**\r\n     * show cluster icons & marker icons if needed\r\n     * @returns {undefined}\r\n     * @memberof ClusterIcon\r\n     */\r\n    show(){\r\n        if(!this._config.swarmModeEnabled){\r\n            const pos = this._center;\r\n            if (this._cluster._markers.length < this._config.minClusterSize){\r\n                const marker = this._cluster._markers[0];\r\n                if(!marker.active()){\r\n                    this._map.Overlays.add(marker);\r\n                }\r\n                return;\r\n            }\r\n            const zoom = this._map.zoom();\r\n            const mz = this._config.maxZoom;\r\n            if(mz && zoom > mz || zoom === 20){\r\n                let len = this._cluster._markers.length;\r\n                while(len--){\r\n                    const marker = this._markers[len];\r\n                    if(!marker.active()){\r\n                        this._cluster._map.Overlays.add(marker);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            if(this._clusterMarker.active()){\r\n                this._map.Overlays.move(this._clusterMarker,pos);\r\n            }else{\r\n                this._clusterMarker.setLocation(pos);\r\n                this._map.Overlays.add(this._clusterMarker);\r\n                if(this._poly){\r\n                    this._map.Overlays.remove(this._poly);\r\n                }\r\n                if(this._config.drawMarkerArea){\r\n                    this._poly = new longdo.Polygon(this._cluster._bounds.getRectVertex(),{\"fillColor\": \"rgba(0,0,0,0.3)\"});\r\n                    this._map.Overlays.add(this._poly);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * remove cluster icon from the map\r\n     * @memberof ClusterIcon\r\n     * @returns {undefined}\r\n     */\r\n    remove(){\r\n        this._map.Overlays.remove(this._clusterMarker);\r\n        if(this._poly){\r\n            this._map.Overlays.remove(this._poly);\r\n            this._poly = null;\r\n        }\r\n    }\r\n    /**\r\n     * set position where cluster icon will be rendered\r\n     * @param {longdo.Location} center position for cluster icon to be rendered\r\n     * @memberof ClusterIcon\r\n     * @returns {undefined}\r\n     */\r\n    setCenter(center){\r\n        this._center = center;\r\n    }\r\n    /**\r\n     * set number displaying in cluster\r\n     * @param {number} sums numbers to change to\r\n     * @returns {undefined}\r\n     * @memberof ClusterIcon\r\n     */\r\n    setSums(sums){\r\n        if(this._sums && sums === this._sums){return;}\r\n        this._sums = sums;\r\n        if(this._clusterMarker && this._clusterMarker.element()){\r\n            this._iloader.changeNumber(this._clusterMarker.element(),this._sums);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * class for loading cluser icons & carrying them\r\n * @export IconLoader\r\n * @class IconLoader\r\n */\r\nexport class IconLoader{\r\n\r\n    /**\r\n     *Creates an instance of IconLoader.\r\n     * @param {MarkerCluster} markercluster MarkerCluster instance\r\n     * @param {ConfigHandler} config config variables\r\n     * @memberof IconLoader\r\n     */\r\n    constructor(markercluster,config){\r\n        this._markerCluster = markercluster;\r\n        this._config = config;\r\n        this._images = new Map();\r\n        this.ready = true;\r\n        this.useDefault = true;\r\n        if(this._config.styles){\r\n            this.loadStyles(this._config.styles);\r\n        }\r\n    }\r\n    /**\r\n     * load style of icons\r\n     * @param {string} url url of icon image\r\n     * @param {number} width width of the image\r\n     * @param {number} height height of the image\r\n     * @param {number} minThreshold minimum threshold of size of cluster\r\n     * @param {Function} [callback] callback function to be called on finishing loading\r\n     * @returns {number} index of loaded style\r\n     * @memberof IconLoader\r\n     */\r\n    load(url,width,height,minThreshold,callback){\r\n        this.ready = false;\r\n        this.useDefault = false;\r\n        const img = new Image(width,height);\r\n        this._images.set(img,{\"ready\":false,\"minThreshold\":minThreshold});\r\n        const that = this;\r\n        img.onload = function(){\r\n            that._images.get(img).ready = true;\r\n            if([...that._images.values()].every(elm => elm.ready)){\r\n                that.ready = true;\r\n                that._markerCluster.resetViewport();\r\n                that._markerCluster._createClusters();\r\n            }\r\n            if(callback){\r\n                callback();\r\n            }\r\n        };\r\n        img.src = url;\r\n        return this._images.keys.length - 1;\r\n    }\r\n    /**\r\n     * load styles config value\r\n     * @param {Array<Object>} styles styles to be loaded\r\n     * @memberof IconLoader\r\n     * @returns {undefined}\r\n     */\r\n    loadStyles(styles){\r\n        styles.sort((elm1,elm2) => \r\n        elm1.minThreshold < elm2.minThreshold ? 1 : elm1.minThreshold === elm2.minThreshold ?\r\n         0 : -1); \r\n         let len = styles.length;\r\n         const that = this;\r\n         while(len--){\r\n             const style = styles[len];\r\n             this.load(style.url,style.width,style.height,style.minThreshold,len === 0 ? ()=>(that.ready = true) : null);\r\n         }\r\n    }\r\n    /**\r\n     * returns icon config object according to longdo Marker icon syntax\r\n     * @param {number} index index number to get icon style\r\n     * @returns {Object} icon config values object \r\n     * @memberof IconLoader\r\n     */\r\n    getIcon(index){\r\n        const result = {\"offset\": { \"x\": 0, \"y\": 0}};\r\n        if(this.useDefault || typeof index === 'undefined'){\r\n            const elm = document.createElement(\"div\");\r\n            const elm2 = document.createElement('div');\r\n            const elm3 = document.createElement('span');\r\n            elm.appendChild(elm2);\r\n            elm2.appendChild(elm3);\r\n            elm.style.width = '40px';\r\n            elm.style.height = '40px';\r\n            elm.style.marginLeft = '-20px';\r\n            elm.style.marginTop = '-20px';\r\n            elm.style.overflow = 'hidden';\r\n            elm.className = 'marker-cluster marker-cluster-small leaflet-marker-icon';\r\n            result.html = elm.outerHTML;\r\n            result.size = {\"width\":40,\"height\":40};\r\n        }else{\r\n            const img = [...this._images.keys()][index];\r\n            const elm = document.createElement(\"div\");\r\n            elm.style.width = `${img.width}px`;\r\n            elm.style.height = `${img.height}px`;\r\n            elm.style.marginLeft = `-${img.width/2}px`;\r\n            elm.style.marginTop = `-${img.height/2}px`;\r\n            elm.style.background = `url('${encodeURI(img.src)}') no-repeat center top`;\r\n            elm.style.lineHeight = elm.style.height;\r\n            elm.style.color = 'black';\r\n            elm.style.fontWeight = 'bold';\r\n            elm.style.textAlign = 'center';\r\n            result.html = elm.outerHTML;\r\n            result.size = {\"width\":img.width,\"height\":img.height};\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * change displaying number in cluster\r\n     * @param {HTMLElement} element element of cluster needing to be made changes\r\n     * @param {number} num number to change to \r\n     * @memberof IconLoader\r\n     * @returns {undefined}\r\n     */\r\n    changeNumber(element,num){\r\n        if(this.useDefault){\r\n            element.children[0].children[0].children[0].innerText = `${num}`;\r\n            if(num < 10){\r\n                element.children[0].className = 'marker-cluster marker-cluster-small leaflet-marker-icon';\r\n            }else if(num < 100){\r\n                element.children[0].className = 'marker-cluster marker-cluster-medium leaflet-marker-icon';\r\n            }else{\r\n                element.children[0].className = 'marker-cluster marker-cluster-large leaflet-marker-icon';\r\n            }\r\n        }else{\r\n            element.children[0].innerText = `${num}`;\r\n            const list = [...this._images.keys()];\r\n            let len = list.length;\r\n            while(len--){\r\n                const img = list[len];\r\n                if(num >= this._images.get(img).minThreshold){\r\n                    let elm = element;\r\n                    elm.style.width = `${img.width}px`;\r\n                    elm.style.height = `${img.height}px`;\r\n                    elm = elm.children[0];\r\n                    elm.style.background = `url('${encodeURI(img.src)}') no-repeat center top`;\r\n                    elm.style.width = `${img.width}px`;\r\n                    elm.style.height = `${img.height}px`;\r\n                    elm.style.lineHeight = elm.style.height;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","const longdo = window.longdo;\r\n/**\r\n * class for carrying bound information\r\n * @export LLBBox\r\n * @class LLBBox\r\n */\r\nexport class LLBBox{\r\n    /**\r\n     *Creates an instance of LLBBox.\r\n     * @param {Array<longdo.Location>} locations array of locations to create bound\r\n     * @memberof LLBBox\r\n     */\r\n    constructor(locations){\r\n        this._projection = longdo.Projections.EPSG3857;\r\n        this._locationList = locations.slice();\r\n        this._originalLocationList = this._locationList.slice();\r\n        if(locations.length > 0){\r\n            this._bounds = longdo.Util.locationBound(this._locationList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * generate the instance set up bound\r\n     * @static\r\n     * @param {longdo.Bound} bound bound to be set up\r\n     * @returns {LLBBox} instance of this class\r\n     * @memberof LLBBox\r\n     */\r\n    static generateFrom(bound){\r\n        return new LLBBox(\r\n            [\r\n                {\"lon\":bound.minLon,\"lat\":bound.minLat},\r\n                {'lon':bound.maxLon,'lat':bound.maxLat}]);\r\n    }\r\n    /**\r\n     * generate the instance set up rect bound from 1 or 2 vertex\r\n     * @static\r\n     * @param {longdo.Location} loc1 1st vertex\r\n     * @param {longdo.Location} [loc2] 2nd vertex, if not provided, it will be as the same as loc1\r\n     * @returns {LLBBox} instance of this class\r\n     * @memberof LLBBox\r\n     */\r\n    static generateRect(loc1,loc2){\r\n        if(!loc2){\r\n            loc2 = loc1;\r\n        }\r\n        return new LLBBox([loc1,loc2]);\r\n    }\r\n\r\n    /**\r\n     * returns bound\r\n     * @returns {longdo.Bound} bound\r\n     * @memberof LLBBox\r\n     */\r\n    getBounds(){\r\n        return {'minLon':this._bounds.minLon,\r\n                'minLat':this._bounds.minLat,\r\n                'maxLon':this._bounds.maxLon,\r\n                'maxLat':this._bounds.maxLat};\r\n    }\r\n    /**\r\n     * returns Left-Top of the bound\r\n     * @returns {longdo.Location} left-top vertex of the bound\r\n     * @memberof LLBBox\r\n     */\r\n    LT(){\r\n        return {\"lon\": this._bounds.minLon, \"lat\": this._bounds.maxLat};\r\n    }\r\n    /**\r\n     * returns Right-Top of the bound\r\n     * @returns {londgo.Location} right-top vertex of the bound\r\n     * @memberof LLBBox\r\n     */\r\n    RT(){\r\n        return {\"lon\": this._bounds.maxLon, \"lat\": this._bounds.maxLat}; \r\n    }\r\n    /**\r\n     * returns Left-Bottom of the bound\r\n     * @returns {longdo.Location} left-bottom vertex of the bound\r\n     * @memberof LLBBox\r\n     */\r\n    LB(){\r\n        return {\"lon\": this._bounds.minLon, \"lat\": this._bounds.minLat};\r\n    }\r\n    /**\r\n     * returns right-bottom of the bound\r\n     * @returns {longdo.Locaton} right-bottom vertex of the bound\r\n     * @memberof LLBBox\r\n     */\r\n    RB(){\r\n        return {\"lon\": this._bounds.maxLon, \"lat\": this._bounds.minLat};\r\n    }\r\n    getMinimumBounds(){\r\n        const b = longdo.Util.locationBound(this._originalLocationList);\r\n        return b;\r\n    }\r\n\r\n    /**\r\n     * add location to bound and extend bound in order to include added location\r\n     * @param {longdo.Location} location location to be added\r\n     * @memberof LLBBox\r\n     * @returns {undefined}\r\n     */\r\n    add(location){\r\n        this._locationList.push(location);\r\n        this._originalLocationList.push(location);\r\n        this._bounds = longdo.Util.locationBound(this._locationList);\r\n    }\r\n    /**\r\n     * remove location from the bound\r\n     * @param {longdo.Location} location location to be removed\r\n     * @memberof LLBBox\r\n     * @returns {undefined}\r\n     */\r\n    remove(location){\r\n        this._locationList = this._locationList.filter((e) => e !== location);\r\n        this._originalLocationList = this._originalLocationList.filter((e) => e !== location);\r\n        this._bounds = this.empty() ? null: longdo.Util.locationBound(this._locationList);\r\n    }\r\n\r\n    /**\r\n     * return whether including no locations or not\r\n     * @returns {boolean} return true if containing no location\r\n     * @memberof LLBBox\r\n     */\r\n    empty(){return this._locationList.length === 0;}\r\n\r\n    /**\r\n     * returns array of locations included itself\r\n     * @returns {Array<longdo.Location>} array of locations included in itself\r\n     * @memberof LLBBox\r\n     */\r\n    getLocations(){\r\n        return this._locationList.slice();\r\n    }\r\n    /**\r\n     * returns whether given location is within its bound\r\n     * @param {longdo.Location} loc location to be checked\r\n     * @returns {boolaen} returns true if location is in bound\r\n     * @memberof LLBBox\r\n     */\r\n    isLocInBounds(loc){\r\n        const result = longdo.Util.contains(loc,this.getRectVertex());\r\n        return result === null ? true : result;\r\n    }\r\n    /**\r\n     * extend bound size\r\n     * @param {number} diff size to extends\r\n     * @returns {LLBBox} itself\r\n     * @memberof LLBBox\r\n     */\r\n    extendSize(diff){\r\n        const b = this._bounds;\r\n        const maxy = this._projection.latToNorm(b.maxLat) + diff;\r\n        const miny = this._projection.latToNorm(b.minLat) - diff;\r\n        this._locationList.push({\"lon\":b.minLon - diff,\"lat\": this._projection.normToLat(miny)});\r\n        this._locationList.push({\"lon\":b.minLon - diff,\"lat\": this._projection.normToLat(maxy)});\r\n        this._locationList.push({\"lon\":b.minLon + diff,\"lat\": this._projection.normToLat(miny)});\r\n        this._locationList.push({\"lon\":b.maxLon + diff,\"lat\": this._projection.normToLat(maxy)});\r\n        this._bounds = longdo.Util.locationBound(this._locationList);\r\n        return this;\r\n    }\r\n    /**\r\n     * returns array of vertex by order of drawing rect\r\n     * @returns {Array<longdo.Location>} array of vertex locations\r\n     * @memberof LLBBox\r\n     */\r\n    getRectVertex(){\r\n        return [{\"lon\":this._bounds.minLon,\"lat\":this._bounds.minLat},\r\n        {\"lon\":this._bounds.minLon,\"lat\":this._bounds.maxLat},\r\n        {\"lon\":this._bounds.maxLon,\"lat\":this._bounds.maxLat},\r\n        {\"lon\":this._bounds.maxLon,\"lat\":this._bounds.minLat}];\r\n    }\r\n\r\n    /**\r\n     * draw polygon to show bound\r\n     * @param {longdo.Map} map map for polygon to show\r\n     * @memberof LLBBox\r\n     * @returns {undefined}\r\n     */\r\n    drawArea(map){\r\n        this._poly = new longdo.Polygon(this.getRectVertex());\r\n        map.Overlays.add(this._poly);\r\n    }\r\n    /**\r\n     * remove polygon from map\r\n     * @param {longdo.Map} map map where the polygon will be removed\r\n     * @memberof LLBBox\r\n     * @returns {undefined}\r\n     */\r\n    removeArea(map){\r\n        if(this._poly && this._poly.active()){\r\n            map.Overlays.remove(this._poly);\r\n            delete this._poly;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * returns relative coordinates in given N x N grid\r\n     * @param {longdo.Location} loc location to be checked\r\n     * @param {number} n size of width,height of the grid\r\n     * @returns {longdo.Tile} coordinates(Tile)\r\n     * @memberof LLBBox\r\n     */\r\n    getNxNGridCord(loc,n){\r\n        if(!this.isLocInBounds(loc)){\r\n            return null;\r\n        }\r\n        const xlen = (this._bounds.maxLon - this._bounds.minLon) / n;\r\n        const ylen = (this._lat2y(this._bounds.maxLat) - this._lat2y(this._bounds.minLat)) / n;\r\n        let lonoffset = loc.lon - this._bounds.minLon;\r\n        const yoffset = -this._lat2y(loc.lat) + this._lat2y(this._bounds.maxLat);\r\n        const xid = Math.floor(lonoffset / xlen), yid = Math.floor(yoffset / ylen);\r\n        return {\"u\": xid,\"v\": yid};\r\n    }\r\n\r\n    /*\r\n    Adapted from https://wiki.openstreetmap.org/wiki/Mercator\r\n    */\r\n    /**\r\n     * convert y pixel coordinate into latitude\r\n     * @param {number} y pixel coordinate\r\n     * @returns {number} latitude\r\n     * @memberof LLBBox\r\n     */\r\n    _y2lat(y) { return (Math.atan(Math.exp(y / (180 / Math.PI))) / (Math.PI / 4) - 1) * 90; }\r\n    /**\r\n     * convert latitude into y pixel coordinate\r\n     * @param {number} lat latitude\r\n     * @returns {number} y pixel coordinate\r\n     * @memberof LLBBox\r\n     */\r\n    _lat2y(lat) { return Math.log(Math.tan((lat / 90 + 1) * (Math.PI / 4) )) * (180 / Math.PI); }\r\n}\r\n\r\nexport class LLCircle{\r\n    constructor(center,radius){\r\n        this.center = center;\r\n        this.sqrad = radius * radius;\r\n    }\r\n}","/** @module MarkerCluster*/\r\nif(typeof window.longdo === 'undefined'){\r\n    throw new Error('longdo API must be loaded before the longdomap markercluster plugin');\r\n}\r\nconst longdo = window.longdo;\r\nimport {LLBBox} from \"./LLBBox\";\r\nimport Config from \"./ConfigHandler\";\r\nimport {IconLoader} from './Icon';\r\nimport Cluster from './Cluster';\r\n/**\r\n * Class for MarkerCluster\r\n *\r\n * @export MarkerCluser\r\n * @class MarkerCluster\r\n */\r\nexport default class MarkerCluster{\r\n\r\n    /**\r\n     *Creates an instance of MarkerCluster.\r\n     * @param {longdo.Map} map Longdo Map instance\r\n     * @param {Object} options Options for MarkerCluster\r\n     * @memberof MarkerCluster\r\n     */\r\n    constructor(map, options){\r\n        this._map = map;\r\n        this._markers = [];\r\n        this._clusters = [];\r\n        this._prevZoom = 2;\r\n        this._ready = false;\r\n        this.config = new Config(options);\r\n        this._iloader = new IconLoader(this,this.config);\r\n        \r\n        const that = this;\r\n        this._map.Event.bind('ready',function() {\r\n            if(!that._ready || !that._iloader.ready){return;}\r\n            that._prevZoom = that._map.zoom;\r\n            that.resetViewport();\r\n            that._createClusters();\r\n        });\r\n        this._map.Event.bind('zoom', function (/*pivot*/){\r\n            if(!that._ready || !that._iloader.ready){return;}\r\n            that.resetViewport();\r\n            // that._createClusters();\r\n        });\r\n        this._map.Event.bind('drop',function() {\r\n            if(!that._ready || !that._iloader.ready){return;}\r\n            that.resetViewport();\r\n            that._createClusters();\r\n        });\r\n        this._map.Event.bind('overlayClick', function(overlay){\r\n            if(!that._ready || !that._iloader.ready){return;}\r\n            let len = that._clusters.length;\r\n            while(len--){\r\n                const cl = that._clusters[len];\r\n                if(overlay === cl._clusterIcon._clusterMarker){\r\n                    const l = [];\r\n                    let len2 = cl._markers.length;\r\n                    while(len2--){\r\n                        l.push(cl._markers[len2].location());\r\n                    }\r\n                    that._map.bound(longdo.Util.locationBound(l));\r\n                    // setTimeout(function(){\r\n                    //     that.resetViewport();\r\n                    //     that._createClusters();\r\n                    // },10);\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        this._map.Event.bind('loadTile', function(s){\r\n            if(s !== 'finish' || !that._ready || !that._iloader.ready){return;}\r\n            that.resetViewport();\r\n            that._createClusters();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * add marker(s) to plugins's management\r\n     * @param {longdo.Marker| Array<longdo.Marker>} markers marker(s) to add\r\n     * @memberof MarkerCluster\r\n     * @returns {undefined}\r\n     */\r\n    addMarkers(markers){\r\n        if(markers instanceof longdo.Marker){\r\n            markers = [markers];\r\n        }\r\n        let len = markers.length;\r\n        while(len--){\r\n            const m = markers[len];\r\n            this._markers.push(m);\r\n        }\r\n        if(this.config.swarmModeEnabled && this.config.swarmAlg === 1){\r\n            this.shuffle();\r\n        }\r\n    }\r\n    /**\r\n     * randomize elements order in {@link MarkerCluster._markers}\r\n     * @memberof MarkerCluster\r\n     * @returns {undefined}\r\n     */\r\n    shuffle(){\r\n        for(let i = this._markers.length-1;i > 0; i--){\r\n            const r = Math.floor(Math.random()*(i+1));\r\n            const temp = this._markers[i];\r\n            this._markers[i] = this._markers[r];\r\n            this._markers[r] = temp;\r\n        }\r\n    }\r\n    /**\r\n     * start rendering if icons-loading finished\r\n     * @memberof MarkerCluster\r\n     * @returns {undefined}\r\n     */\r\n    render(){\r\n        this._ready = true;\r\n        if(this._iloader.ready){\r\n            this.resetViewport();\r\n            this._createClusters();\r\n        }\r\n    }\r\n    /**\r\n     * choose markers in Map bound & add to clusters\r\n     * @memberof MarkerCluster\r\n     * @returns {undefined}\r\n     */\r\n    _createClusters(){\r\n        const mapBounds = LLBBox.generateFrom(this._map.bound());\r\n        const bounds = mapBounds.extendSize(this.config.gridSize*Math.pow(2,-this._map.zoom()));\r\n        let len = this._markers.length;\r\n        while(len--){\r\n            const m = this._markers[len];\r\n            const loc = m.location();\r\n            if(!m.isAdded && bounds.isLocInBounds(loc)){\r\n                if(!this.config.swarmModeEnabled){\r\n                    this._addToClosestCluster(m);\r\n                }else{\r\n                    if(this.config.swarmAlg === 2){\r\n                        this._addToClosestCluster(m);\r\n                    }else{\r\n                        this._addToTiledCluster(m);\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n        len = this._clusters.length;\r\n        while(len--){\r\n            const cl = this._clusters[len];\r\n            cl.finalize();\r\n        }\r\n    }\r\n    /**\r\n     * add marker to the closest cluster if it is within cluster's grid. If not, create new one.\r\n     * @param {longdo.Marker} marker marker to be added\r\n     * @memberof MarkerCluster\r\n     * @returns {undefined}\r\n     */\r\n    _addToClosestCluster(marker){\r\n        let distance = Number.POSITIVE_INFINITY;\r\n        let clusterToAddTo = null;\r\n        let len = this._clusters.length;\r\n        while(len--){\r\n            const cluster = this._clusters[len];\r\n            const cen = cluster._center;\r\n            if(cen){\r\n                const d = longdo.Util.distance([cen,marker.location()]);\r\n                if(d < distance){\r\n                    distance = d;\r\n                    clusterToAddTo = cluster;\r\n                }\r\n            }\r\n        }\r\n        if(clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)){\r\n            clusterToAddTo.addMarker(marker);\r\n        }else{\r\n            const cluster = new Cluster(this,this.config,this._iloader);\r\n            cluster.addMarker(marker);\r\n            this._clusters.push(cluster);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add marker to clusters in charge of its tile\r\n     * @param {longdo.Marker} marker marker to be added\r\n     * @returns {undefined}\r\n     * @memberof MarkerCluster\r\n     */\r\n    _addToTiledCluster(marker){\r\n        const that = this;\r\n        const locationToTile = function(loc){\r\n            const point = longdo.Util.locationToPoint(longdo.Projections.EPSG3857,loc);\r\n            point.z = 20-that._map.zoom();\r\n            return longdo.Util.pointToTile(point);\r\n        };\r\n        const tile = locationToTile(marker.location());\r\n        let len = this._clusters.length;\r\n        while(len--){\r\n            const cluster = this._clusters[len];\r\n            if(cluster.u === tile.u && cluster.v === tile.v){\r\n                cluster.addMarker(marker,tile);\r\n                return;\r\n            }\r\n        }\r\n        const cluster = new Cluster(this,this.config,this._iloader);\r\n        cluster.u = tile.u;\r\n        cluster.v = tile.v;\r\n        cluster.addMarker(marker,tile);\r\n        this._clusters.push(cluster);\r\n    }\r\n\r\n    _removeMarker(marker){\r\n        const index = this._markers.indexOf(marker);\r\n        if(index === -1){\r\n            return false;\r\n        }\r\n        this._map.Overlays.remove(marker);\r\n        this._markers.splice(index,1);\r\n        return true;\r\n    }\r\n\r\n    removeMarker(marker){\r\n        const removed = this._removeMarker(marker);\r\n        if(removed){\r\n            this.resetViewport();\r\n            this._createClusters();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeMarkers(markers){\r\n        const markersCopy = markers === this._markers ? this._markers.slice() : markers;\r\n        let removed = false;\r\n        let len = markersCopy.length;\r\n        while(len--){\r\n            const r = this._removeMarker(markersCopy[len]);\r\n            removed = removed || r;\r\n        }\r\n        if(removed){\r\n            this.resetViewport();\r\n            this._createClusters();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearMarkers(){\r\n        this.resetViewport();\r\n        let len = this._markers.length;\r\n        while(len--){\r\n            const marker = this._markers[len];\r\n            this._map.Overlays.remove(marker);\r\n        }\r\n        this._markers = [];\r\n    }\r\n\r\n    /**\r\n     * remove clusters & markers from the map, then clear clusters\r\n     * @memberof MarkerCluster\r\n     * @returns {undefined}\r\n     */\r\n    resetViewport(){\r\n        let len = this._clusters.length;\r\n        while(len--){\r\n            this._clusters[len].remove();\r\n        }\r\n        len = this._markers.length;\r\n        while(len--){\r\n            const marker = this._markers[len];\r\n            marker.isAdded = false;\r\n            this._map.Overlays.remove(marker);\r\n        }\r\n        this._clusters = [];\r\n    }\r\n}\r\n","export {default as MarkerCluster} from './MarkerCluster';\r\n"],"sourceRoot":""}